extends home
block issues
  .gridbox.gridmain
    ul(id="issues")
      if(userOrgs.length!=0)
        li.postIssuePart
          form(method='POST', id="postIssueForm", action="/post")   
            .issuePart1D(style="display:inline-block;width:100%;padding-left:13px")
              div(style="float:left")
                h(style="font-weight:500;font-size:14pt") Add issue
              div(style="float:right")
                i(class="glyphicon glyphicon-minus" id="expandPost")           
            
            .main.issueBlock
              #nextBtn(style="transition: all .1s ease-in;")
                div(style="margin-left:5px")
                    .custom-select(style='width:100%;')
                      select(name="orguserId" required)
                        option(value="not_selected") Select organisation
                         for ech in memberctrlorgs
                          option(value=ech.userId) #{ech.name}

                    
                    input(type='text' id="issueDescriptionTopic" name="issueDescriptionTopic" placeholder="Issue Topic" required maxlength="60")
                    
                    textarea(id="issueDescriptionText" name="issueDescriptionText" placeholder="Write detailed description" required )
                    
                    div(style="display:inline-block;width:100%")
                      div(style="display:inline-flex;float:left")
                        input(type="checkbox" id="anonymity" name="anonymity")
                        span(style="color:black;width:150px") Be Anonymous
                      div(style="text-align:center;float:right")
                        input( value="Post" type="submit" name="issuePost" id="issuePost")        
        
          
        if (issues.length!=0)
          for each in issues  
            if(userOrgs.indexOf(each.orgUserId)>-1)  
              li.issuePart(style="box-shadow: 0 2px 4px 0 #d1d5da78,0 2px 10px 0 #d1d5da78!important;border-color:#d1d5da78")
                .issuePart1D(style="display:inline-block;width:100%;padding-left:13px")
                  div(style="float:left;display:inline-flex")
                    div(style="float:left")
                      img(src='/uploads/'+'#{userDetails.avatarPath}', alt='' style="border-radius:10%;width:40px;margin-right:10px")
                    div(style="float:right")
                      if (each.anonymity==="on")
                        span(style='font-weight:900') Anonymous
                      else if(each.anonymity==="off")
                        a(href="/profile/"+each.username id="linkProfile" style='font-weight:900;') #{each.name}
                      
                      span(style='color:gray')  
                        i.glyphicon.glyphicon-play(style="font-size:10pt")  
                        a(href="/orgs/"+each.orgUserId id="linkProfile" style='font-weight:900;')  #{each.orgname}
                      p(id="date") #{each.datePosted}
                  
                  div(style="float:right")
                    if trending
                      i.glyphicon.glyphicon-fire(style="color:red;margin:5px" aria-hidden='true')
                    
                    if (each.status==="open")
                      i(class="mega-octicon octicon-issue-opened issueStatus" id=each._id)
                        span  Open
                    else
                      i(class="mega-octicon octicon-issue-closed issueStatus" id=each._id)
                        span  Closed

                    if(each.username===username)
                      .dropdown(style="width:auto!important;float:right")
                        button#menu1.dropdown-toggle(type='button', data-toggle='dropdown' style="border:none;background-color:unset")
                          i(class="ionicons ion-android-more-vertical" style="font-weight:500;font-size:20pt;margin-left:5px")
                        
                        ul.dropdown-menu(role='menu', aria-labelledby='menu1' style="font-size:12pt;font-weight:500;")
                          li(role='presentation')
                            if each.status==="open"
                              button(type="submit" style="border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="closeIssueOption") Close Issue
                              button(type="submit" style="display:none;border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="openIssueOption") Reopen Issue
                            else
                              button(type="submit" style="display:none;border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="closeIssueOption") Close Issue
                              button(type="submit" style="border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="openIssueOption") Reopen Issue
                          li(role='presentation')
                            button(type="submit" style="border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="editIssueOption") Edit Issue
                          li(role="presentation" class="divider")
                          li(role='presentation')
                            button(type="submit" style="border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="delIssueOption") Delete Issue
                          li(role='presentation')
                            if each.anonymity=="on"
                              button(type="submit" style="border:none;background-color:unset;margin-left:10px" role='menuitem', tabindex='-1', id="reportIssueOption") Report Spam

                  
                .main.issueBlock
                  #nextBtn
                    div#issueTopic(style="margin-left:10px;width:auto!important")
                      a(href="/indpost/"+each._id style="color:black") #{each.issueTopic}
                    div#issueDesc #{each.issueDesc}
              
                div(id="feed_details")
                  ul(id="feed_numbers" style="padding-left:15px;list-style:none;display:inline-flex;font-size:10pt;")
                    li
                      a(href="#" ) 
                        span(id="num_of_likes") #{each.supporters.length}
                        |  Supports
                    li
                      h(style="margin-right:5px;margin-left:5px") -
                    li
                      a(href="#")
                        span(id="num_of_comments") #{each.comments.length}
                        |  Comments
                 
                  .issueCommentPart
                    button(id="likeBtn" )
                      if (each.supporters.indexOf(username)==-1)
                        i(class="fa fa-thumbs-o-up" style="font-size:18px;" id="likeBtnLogo")
                        |  I Support
                      else
                        i(class="fa fa-thumbs-up" style="font-size:18px" id="likeBtnLogo")
                        |  I Support

                    button(id="commentBtn" )
                      i(class="mega-octicon octicon-comment" style="font-size:18px")
                      |  Comment
        else
          div(style="text-align:center!important;")
            img(src="/images/SuccessLogo.png" style="width:30%;opacity:0.7")
            br
            br
            h(style="font-weight:500; font-size:25pt; color:grey") Add your issues
  

      else if(userOrgs.length==0)
        div(style="text-align:center!important;")
            img(src="/images/SuccessLogo.png" style="width:30%;opacity:0.7")
            br
            br
            h(style="font-weight:500; font-size:25pt; color:grey") Add/Enter any organisation to get started

  script.
    //- ////////////////////////// Coded from W3schools for options /////////////////////////////////////////////////
    var x, i, j, selElmnt, a, b, c;
      /*look for any elements with the class "custom-select":*/
      x = document.getElementsByClassName("custom-select");
      for (i = 0; i < x.length; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        /*for each element, create a new DIV that will act as the selected item:*/
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        /*for each element, create a new DIV that will contain the option list:*/
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 1; j < selElmnt.length; j++) {
          /*for each option in the original select element,
          create a new DIV that will act as an option item:*/
          c = document.createElement("DIV");
          c.innerHTML = selElmnt.options[j].innerHTML;
          c.addEventListener("click", function(e) {
              /*when an item is clicked, update the original select box,
              and the selected item:*/
              var i, s, h;
              s = this.parentNode.parentNode.getElementsByTagName("select")[0];
              h = this.parentNode.previousSibling;
              for (i = 0; i < s.length; i++) {
                if (s.options[i].innerHTML == this.innerHTML) {
                  s.selectedIndex = i;
                  h.innerHTML = this.innerHTML;
                  break;
                }
              }
              h.click();
          });
          b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function(e) {
            /*when the select box is clicked, close any other select boxes,
            and open/close the current select box:*/
            e.stopPropagation();
            closeAllSelect(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active");
        });
      }
      function closeAllSelect(elmnt) {
        /*a function that will close all select boxes in the document,
        except the current select box:*/
        var x, y, i, arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        for (i = 0; i < y.length; i++) {
          if (elmnt == y[i]) {
            arrNo.push(i)
          } else {
            y[i].classList.remove("select-arrow-active");
          }
        }
        for (i = 0; i < x.length; i++) {
          if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
          }
        }
      }
      /*if the user clicks anywhere outside the select box,
      then close all select boxes:*/
      document.addEventListener("click", closeAllSelect);

      //- //////////////////////////////////////////////////////////////////////////////////////////
      $('.main.issueBlock #issueDesc').each(function(){
        var descLength = $(this).text().length;
        var descTrimmed1 = (descLength>250)?("<span id='descTrimmed1'>"+$(this).text().substring(0,250)+"</span><span id='3dots'>...</span>"):($(this).text());
        var descTrimmed2 = (descLength>250)?("<span id='descTrimmed2' style='display:none'>"+$(this).text().substring(250)+"</span>"+"<span id='readMore' style='color:#337ab7;cursor:pointer'>Read More</span>"):"";
        
        $(this).html(descTrimmed1+descTrimmed2);
        //- (descTrimmed.length>200)?($(this).append('<span id="readMore" style="color:#337ab7;cursor:pointer">Read More</span>')):1;
        //- $('#readMore')
      });

      $('#issueDesc #readMore').click(function(){
        if($(this).text()=="Read More")
          {
            $(this).text('Read Less');
          }
        else
          $(this).text('Read More');
          $(this).siblings('#descTrimmed2').toggle();
          $(this).siblings('#3dots').toggle();
      });

      $('#expandPost').click(function(){
        $('#nextBtn').slideToggle();
        $(this).toggleClass('glyphicon-plus glyphicon-minus');
      })

      $('button#delIssueOption').click(function(){
        var id = $(this).parents('li.issuePart').find('a#issueTopic').attr('href').substring(9);
        var delPost = $(this);

        $.ajax({
          method : 'POST',
          url : 'delpost/'+id,
          success: function(data){
            if(data=="1")
              {
                delPost.closest('li.issuePart').remove();
              }
          }
        });
      });

      $('button#openIssueOption').click(function(){
        var id = $(this).parents('li.issuePart').find('#issueTopic a').attr('href').substring(9);
        var thisPost = $(this);

        $.ajax({
          method : 'POST',
          url : 'openIssue/'+id,
          success: function(data){
            if(data=="1")
              {
                thisPost.parents('li.issuePart').find('i.issueStatus').removeClass("octicon-issue-closed");
                thisPost.parents('li.issuePart').find('i.issueStatus').addClass("octicon-issue-opened");
                thisPost.parents('li.issuePart').find('i.issueStatus span').text(" Open");
                thisPost.siblings('#closeIssueOption').show();
                thisPost.hide();
              }
          }
        });
      });

      $('button#editIssueOption').click(function(){
        var issueTopic = $(this).closest('li.issuePart').find('#issueTopic');
        var issueDesc = $(issueTopic).siblings('#issueDesc');
        
        var issueTopicText = $(issueTopic).html();
        var issueDescriptionText = $(issueDesc).html();

        var feed_details = $(this).closest('li.issuePart').find('#feed_details');
        var feed_details_issueCommentPart = $(feed_details).find('.issueCommentPart').html();
        
        var issueId = $(this).closest('.dropdown.open').siblings('i.issueStatus').attr('id');
        console.log(issueId);
        
        issueTopic.html('<input type="text" id="issueDescriptionTopic" name="issueDescriptionTopic" value="'+issueTopic.text()+'" placeholder="Issue Topic" required maxlength="60"/>');
        $(issueDesc).css({
          "margin" : "0px",
          'padding':'0px',
          'padding-left': '10px'
        });
        issueDesc.html('<textarea style="width:100%;min-height:150px" id="issueDescriptionText" name="issueDescriptionText" placeholder="Write detailed description" required>'+issueDesc.text()+'</textarea>');
        $(feed_details).find('ul#feed_numbers').hide();
        
        $(feed_details).find('.issueCommentPart').html('\
        <button id="cancelEditBtn">\
        <i style="font-size:18px;" id="likeBtnLogo" class="ionicons ion-android-cancel"></i> Cancel\
        </button>\
        <button id="updateEditBtn">\
        <i style="font-size:18px" class="ionicons ion-android-done">\
        </i> Update</button>');

        $('#cancelEditBtn').click(function(){
          $(issueDesc).css({
            "margin" : "5px",
            'padding':'10px',
            'padding-left': '5px'
          });
          console.log(feed_details_issueCommentPart);
          $(issueTopic).html(issueTopicText);
          $(issueDesc).html(issueDescriptionText);
          $(feed_details).find('ul#feed_numbers').show();
          $(feed_details).find('.issueCommentPart').html(feed_details_issueCommentPart);
        });

        $('#updateEditBtn').click(function(){
          $(issueDesc).css({
            "margin" : "5px",
            'padding':'10px',
            'padding-left': '5px'
          });
          
          $.ajax({
            method: 'POST',
            data:{
              issueId: issueId,
              //orgUserId: ,
              issueTopic : $(issueTopic).find('input#issueDescriptionTopic').val(),
              issueDesc : $(issueDesc).find('textarea#issueDescriptionText').val()
            },
            url: '/updateIssue/',
            success: function(data){
              if(data=="1"){
                $(issueTopic).html($(issueTopic).find('input#issueDescriptionTopic').val());
                $(issueDesc).html($(issueDesc).find('textarea#issueDescriptionText').val());
                $(feed_details).find('ul#feed_numbers').show();
                $(feed_details).find('.issueCommentPart').html(feed_details_issueCommentPart);   
              }
              else{
                console.log("Some Error Occured!");
                $(issueTopic).html(issueTopicText);
                $(issueDesc).html(issueDescriptionText);
                $(feed_details).find('ul#feed_numbers').show();
                $(feed_details).find('.issueCommentPart').html(feed_details_issueCommentPart);
              }
            }
          })
        });
      });


      $('button#closeIssueOption').click(function(){
        console.log("Close Issue Option Select");
        var id = $(this).parents('li.issuePart').find('#issueTopic a').attr('href').substring(9);
        var thisPost = $(this);

        $.ajax({
          method : 'POST',
          url : 'closeIssue/'+id,
          success: function(data){
            if(data=="1")
              {
                
                thisPost.parents('li.issuePart').find('i.issueStatus').removeClass("octicon-issue-opened");
                thisPost.parents('li.issuePart').find('i.issueStatus').addClass("octicon-issue-closed");
                thisPost.parents('li.issuePart').find('i.issueStatus span').text(" Closed");
                thisPost.siblings('#openIssueOption').show();
                thisPost.hide(); 
              }
          }
        });
      });

      
      $('button#likeBtn').click(function(e){

        if( $(this).find('i#likeBtnLogo').hasClass("fa-thumbs-up") )
          { 
           console.log("Executed 1");
            $(this).parents('#feed_details').find('#num_of_likes').html(parseInt($(this).parents('#feed_details').find('#num_of_likes').text()[0])-1);
          }
        
        else if( $(this).find('i#likeBtnLogo').hasClass('fa-thumbs-o-up') )
          {
           console.log("Executed 2");
            $(this).parents('#feed_details').find('#num_of_likes').html(parseInt($(this).parents('#feed_details').find('#num_of_likes').text()[0])+1);
          }

          e.preventDefault();
          $(this).find('i.fa').toggleClass('fa-thumbs-o-up fa-thumbs-up');
          var id = $(this).parents('li.issuePart').find('a#issueTopic').attr('href');
          console.log(id);
          
          id = id.substring(9);
          console.log(id);
          
          var _url = "/likepost/"+id;
          console.log(_url);
          $.post({
          url: _url,
        });
      });